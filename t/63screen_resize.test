local vt=init()
local state = wantstate(vt, "")
local screen = wantscreen(vt, "")

-- Resize wider preserves cells
reset(state,screen)
resize(25,80,vt)
push "AB\r\nCD"
  ?screen_chars 0,0,1,80 = "AB"
  ?screen_chars 1,0,2,80 = "CD"
resize(25,100,vt)
  ?screen_chars 0,0,1,100 = "AB"
  ?screen_chars 1,0,2,100 = "CD"

-- Resize wider allows print in new area
reset(state,screen)
resize(25,80,vt)
push "AB\x1b[79GCD"
  ?screen_chars 0,0,1,2 = "AB"
  ?screen_chars 0,78,1,80 = "CD"
resize(25,100,vt)
  ?screen_chars 0,0,1,2 = "AB"
  ?screen_chars 0,78,1,80 = "CD"
push "E"
  ?screen_chars 0,78,1,81 = "CDE"

-- Resize shorter with blanks just truncates
reset(state,screen)
resize(25,80,vt)
push "Top\x1b[10HLine 10"
  ?screen_row 0 = "Top"
  ?screen_row 9 = "Line 10"
  ?cursor = 9,7
resize(20,80,vt)
  ?screen_row 0 = "Top"
  ?screen_row 9 = "Line 10"
  ?cursor = 9,7

-- Resize shorter with content must scroll
reset(state,screen)
resize(25,80,vt)
push "Top\x1b[25HLine 25\x1b[15H"
  ?screen_row 0 = "Top"
  ?screen_row 24 = "Line 25"
  ?cursor = 14,0
local screen = wantscreen(vt, "") b
resize(20,80,vt)
  sb_pushline 80 = 54 6F 70
  sb_pushline 80 =
  sb_pushline 80 =
  sb_pushline 80 =
  sb_pushline 80 =
  ?screen_row 0  = ""
  ?screen_row 19 = "Line 25"
  ?cursor = 9,0

-- Resize shorter does not lose line with cursor
# See also https://github.com/neovim/libvterm/commit/1b745d29d45623aa8d22a7b9288c7b0e331c7088
reset(state,screen)
local screen = wantscreen(vt, "") -b
resize(25,80,vt)
local screen = wantscreen(vt, "") b
push "\x1b[24HLine 24\r\nLine 25\r\n"
  sb_pushline 80 =
  ?screen_row 23 = "Line 25"
  ?cursor = 24,0
resize(24,80,vt)
  sb_pushline 80 =
  ?screen_row 22 = "Line 25"
  ?cursor = 23,0

-- Resize shorter does not send the cursor to a negative row
# See also https://github.com/vim/vim/pull/6141
reset(state,screen)
local screen = wantscreen(vt, "") -b
resize(25,80,vt)
local screen = wantscreen(vt, "") b
push "\x1b[24HLine 24\r\nLine 25\x1b[H"
  ?cursor = 0,0
resize(20,80,vt)
  sb_pushline 80 =
  sb_pushline 80 =
  sb_pushline 80 =
  sb_pushline 80 =
  sb_pushline 80 =
  ?cursor = 0,0

-- Resize taller attempts to pop scrollback
reset(state,screen)
local screen = wantscreen(vt, "") -b
resize(25,80,vt)
push "Line 1\x1b[25HBottom\x1b[15H"
  ?screen_row 0  = "Line 1"
  ?screen_row 24 = "Bottom"
  ?cursor = 14,0
local screen = wantscreen(vt, "") b
resize(30,80,vt)
  sb_popline 80
  sb_popline 80
  sb_popline 80
  sb_popline 80
  sb_popline 80
  ?screen_row 0  = "ABCDE"
  ?screen_row 5  = "Line 1"
  ?screen_row 29 = "Bottom"
  ?cursor = 19,0
local screen = wantscreen(vt, "") -b

-- Resize can operate on altscreen
reset(state,screen)
local screen = wantscreen(vt, "") a
resize(25,80,vt)
push "Main screen\x1b[?1049h\x1b[HAlt screen"
resize(30,80,vt)
  ?screen_row 0 = "Alt screen"
push "\x1b[?1049l"
  ?screen_row 0 = "Main screen"
