local vt=init()
UTF8 0
WANTPARSER

-- Basic text
push "hello"
  text 68, 65, 6c, 6c, 6f

-- C0
push "\x03"
  control 3

push "\x1f"
  control 1f

-- C1 8bit
push "\x83"
  control 83

push "\x99"
  control 99

-- C1 7bit
push "\x1b\x43"
  control 83

push "\x1b\x59"
  control 99

-- High bytes
push "\xa0\xcc\xfe"
  text a0, cc, fe

-- Mixed
push "1\n2"
  text 31
  control 10
  text 32

-- Escape
push "\x1b="
  escape "="

-- Escape 2-byte
push "\x1b(X"
  escape "(X"

-- Split write Escape
push "\x1b("
push "Y"
  escape "(Y"

-- Escape cancels Escape, starts another
push "\x1b(\x1b)Z"
  escape ")Z"

-- CAN cancels Escape, returns to normal mode
push "\x1b(\x{18}AB"
  text 41, 42

-- C0 in Escape interrupts and continues
push "\x1b(\nX"
  control 10
  escape "(X"

-- CSI 0 args
push "\x1b[a"
  csi 61 *

-- CSI 1 arg
push "\x1b[9b"
  csi 62 9

-- CSI 2 args
push "\x1b[3;4c"
  csi 63 3,4

-- CSI 1 arg 1 sub
push "\x1b[1:2c"
  csi 63 1+,2

-- CSI many digits
push "\x1b[678d"
  csi 64 678

-- CSI leading zero
push "\x1b[007e"
  csi 65 7

-- CSI qmark
push "\x1b[?2;7f"
  csi 66 L=3f 2,7

-- CSI greater
push "\x1b[>c"
  csi 63 L=3e *

-- CSI SP
push "\x1b[12 q"
  csi 71 12 I=20

-- Mixed CSI
push "A\x1b[8mB"
  text 41
  csi 6d 8
  text 42

-- Split write
push "\x1b"
push "[a"
  csi 61 *
push "foo\x1b["
  text 66, 6f, 6f
push "4b"
  csi 62 4
push "\x1b[12;"
push "3c"
  csi 63 12,3

-- Escape cancels CSI, starts Escape
push "\x1b[123\x1b9"
  escape "9"

-- CAN cancels CSI, returns to normal mode
push "\x1b[12\x{18}AB"
  text 41, 42

-- C0 in Escape interrupts and continues
push "\x1b[12\n;3X"
  control 10
  csi 58 12,3

-- OSC BEL
push "\x1b]1;Hello\x07"
  osc [1 "Hello"]

-- OSC ST (7bit)
push "\x1b]1;Hello\x1b\\"
  osc [1 "Hello"]

-- OSC ST (8bit)
push "\x{9d}1;Hello\x9c"
  osc [1 "Hello"]

-- OSC in parts
push "\x1b]52;abc"
  osc [52 "abc"
push "def"
  osc "def"
push "ghi\x1b\\"
  osc "ghi"]

-- OSC BEL without semicolon 
push "\x1b]1234\x07"
  osc [1234 ]

-- OSC ST without semicolon 
push "\x1b]1234\x1b\\"
  osc [1234 ]

-- Escape cancels OSC, starts Escape
push "\x1b]Something\x1b9"
  escape "9"

-- CAN cancels OSC, returns to normal mode
push "\x1b]12\x{18}AB"
  text 41, 42

-- C0 in OSC interrupts and continues
push "\x1b]2;\nBye\x07"
  osc [2 ""
  control 10
  osc "Bye"]

-- DCS BEL
push "\x1bPHello\x07"
  dcs ["Hello"]

-- DCS ST (7bit)
push "\x1bPHello\x1b\\"
  dcs ["Hello"]

-- DCS ST (8bit)
push "\x{90}Hello\x9c"
  dcs ["Hello"]

-- Split write of 7bit ST
push "\x1bPABC\x1b"
  dcs ["ABC"
push "\\"
  dcs ]

-- Escape cancels DCS, starts Escape
push "\x1bPSomething\x1b9"
  escape "9"

-- CAN cancels DCS, returns to normal mode
push "\x1bP12\x{18}AB"
  text 41, 42

-- C0 in OSC interrupts and continues
push "\x1bPBy\ne\x07"
  dcs ["By"
  control 10
  dcs "e"]

-- APC BEL
push "\x1b_Hello\x07"
  apc ["Hello"]

-- APC ST (7bit)
push "\x1b_Hello\x1b\\"
  apc ["Hello"]

-- APC ST (8bit)
push "\x{9f}Hello\x9c"
  apc ["Hello"]

-- PM BEL
push "\x1b^Hello\x07"
  pm ["Hello"]

-- PM ST (7bit)
push "\x1b^Hello\x1b\\"
  pm ["Hello"]

-- PM ST (8bit)
push "\x{9e}Hello\x9c"
  pm ["Hello"]

-- SOS BEL
push "\x1bXHello\x07"
  sos ["Hello"]

-- SOS ST (7bit)
push "\x1bXHello\x1b\\"
  sos ["Hello"]

-- SOS ST (8bit)
push "\x{98}Hello\x9c"
  sos ["Hello"]

-- SOS can contain any C0 or C1 code
push "\x1bXABC\x01DEF\x1b\\"
  sos ["ABC\x01DEF"]
push "\x1bXABC\x99DEF\x1b\\"
  sos ["ABC\x{99}DEF"]

-- NUL ignored
push "\x{00}"

-- NUL ignored within CSI
push "\x1b[12\x{00}3m"
  csi 6d 123

-- DEL ignored
push "\x{7f}"

-- DEL ignored within CSI
push "\x1b[12\x{7f}3m"
  csi 6d 123

-- DEL inside text"
push "AB\x{7f}C"
  text 41,42
  text 43
